{"Name":"Raygun4Net","Id":3487,"Alias":"raygun4net","Description":"Raygun4Net is a small library that can listen to all unhandled exceptions in your Android and iOS applications and send the details to your [Raygun.com](https://raygun.com/?utm_source=xamarin-components) account. This allows you to see issues in your application as soon as your users encounter them alongside performance issues that are causing bad user experiences. Debug and release improvements and fixes for your customers faster than ever before using the Raygun software intelligence platform.\r\n\r\nAs you can see below, only a small amount of code is required to integrate this Raygun provider into your application. Full documentation is provided when you install this component, and a step-by-step guide is available when you create an application on your [Raygun.com](https://raygun.com/?utm_source=xamarin-components) dashboard.\r\n\r\nIn the code below, attaching both Crash Reporting and Real User Monitoring (Pulse) monitors the errors, crashes and performance issues affecting your users and presents them immediately for review within your Raygun dashboard.\r\n\r\n```csharp\r\nusing Mindscape.Raygun4Net;\r\n...\r\n\r\n// Place this code somewhere in the main entry point of your application.\r\n// For Android, make sure to pass in the main entry activity to the AttachPulse method.\r\nRaygunClient.Initialize(\"YOUR_APP_API_KEY\").AttachCrashReporting().AttachPulse();\r\n```\r\n\r\n[Sign up to Raygun.com](https://app.raygun.com/signup?utm_source=xamarin-components) to generate api keys for the above code and to view the error reports and performance data sent from your applications.\r\n","Version":"5.5.0","Summary":"Send exception messages in your Android and iOS applications to the Raygun cloud service.","QuickStart":"Usage\r\n====================\r\n\r\n### Android\r\n\r\nTo send all unhandled exceptions in your application, use the following code using your app API key. The best place to put this is in the main/entry Activity of your application.\r\nIn the code below, attaching Crash Reporting and Pulse (Real User Monitoring) are each optional depending on which product(s) you\u0027re interested in using.\r\n\r\n```csharp\r\nRaygunClient.Initialize(\"YOUR_APP_API_KEY\").AttachCrashReporting().AttachPulse(this);\r\n```\r\n\r\n### iOS\r\n\r\nIn the main entry point of the application, use the following code with your app API key. This will send all unhandled exceptions in your application.\r\nIn the code below, attaching Crash Reporting and Pulse (Real User Monitoring) are each optional depending on which product(s) you\u0027re interested in using.\r\n\r\n```csharp\r\nstatic void Main (string[] args)\r\n{\r\n  RaygunClient.Initialize(\"YOUR_APP_API_KEY\").AttachCrashReporting().AttachPulse();\r\n\r\n  UIApplication.Main (args, null, \"AppDelegate\");\r\n}\r\n```\r\n\r\n### Android \u0026 IOS\r\n\r\nAt any point after initializing Raygun, you can use RaygunClient.SharedClient to get the static instance. This can be used for manually sending messages or changing options such as the User identity string. There are various overloads for the Send method that allow you to optionally send tags, custom data and an alternative version number.\r\n\r\nWhere is my app API key?\r\n====================\r\n\r\nWhen sending exceptions to the Raygun service, an app API key is required to map the messages to your application.\r\n\r\nWhen you create a new application on your Raygun dashboard, your app API key is displayed at the top of the instructions page. You can also find the API key by clicking the \"Application Settings\" button in the side bar of the Raygun dashboard.\r\n\r\nSamples\r\n====================\r\n\r\nBecause of the API key requirement mentioned above, in order to run the samples you\u0027ll need to replace YOUR_APP_API_KEY in MainActivity (for Android) and Main.cs (for iOS) to be an api key you\u0027ve generated in your Raygun dashboard.\r\n\r\nNamespace\r\n====================\r\nThe main classes can be found in the Mindscape.Raygun4Net namespace.\r\n","Hash":"0e4c0d45e3b2bababff5f201b7dbd66f","TargetPlatforms":["ios","ios-unified","android"],"TrialHash":null}
